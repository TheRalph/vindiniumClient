#pragma once

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/// Global includes

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/// Local includes
#include "IBehaviorModule.h"

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/// Forward declarations

namespace BEEN
{

////////////////////////////////////////////////////////////////////////////////
////////////////////////////////////////////////////////////////////////////////
/**
 * @brief Random Behavior module class for BEhavior ENgine
 */
class CRandomBehaviorModule : public IBehaviorModule
{
    public:

        /**
        * @brief Constructor by default
        */
        CRandomBehaviorModule();

        /**
        * @brief Destructor
        */
        virtual ~CRandomBehaviorModule();

        /**
        * @brief Compute the next action according to the current Game status
        * @param inGame the current Game
        * @return the action to do
        * 
        * The default behavior is random!
        * This function must be overloaded with the needed behavior
        */
        E_GAME_ACTIONS playBehavior(const CGame& inGame);

}; // class CRandomBehaviorModule

} // namespace BEEN